#!/bin/bash

function install_rar() {
    if [[ -z $(which rar) ]]; then
        apt-get -y install rar unrar >>$log 2>&1 || { echo "INFO: Could not find rar/unrar in the repositories. It is likely you do not have the multiverse repo enabled. Installing directly."; _rar; }
    fi
}

function _rar () {
    cd /tmp
    wget -q http://www.rarlab.com/rar/rarlinux-x64-5.5.0.tar.gz
    tar -xzf rarlinux-x64-5.5.0.tar.gz >/dev/null 2>&1
    cp rar/*rar /bin >/dev/null 2>&1
    rm -rf rarlinux*.tar.gz >/dev/null 2>&1
    rm -rf /tmp/rar >/dev/null 2>&1
}

# Returns a password for a user in case one exists.
# If password is not found, returns with error code 1 
function _get_user_password () {
    user_to_get="$1"
    password=''

    for file in /root/.master.info /root/*.info ; do 
        ##TODO fix when there is no addition users other than .master. It works but it's just ugly
        if [[ -f $file ]]; then 
            user_in_file=$(cat $file | cut -d: -f1)
            if [ "$user_in_file" = "$user_to_get" ]; then 
                password="$(cat $file | cut -d: -f2)"
                break
            fi
        fi
    done
    
    if [[ -z $password ]]; then 
        return 1
    fi
    echo "$password"
}

# OLD way to get users from htpasswd
# Rather wouldn't use this as 3rd party applications migh be playing with this as well
# function _get_user_list () {
#     users=($(cut -d: -f1 < /etc/htpasswd))
# }

#Returns all users managed by swizzin as a newline separated list
function _get_user_list () {
    for file in /root/.master.info /root/*.info; do 
        ##TODO fix when there is no addition users other than .master. It works but it's just ugly
        if [[ -f $file ]]; then 
            cut -d: -f1 < "$file"
        fi
    done
}

#Returns the username of the master
function _get_master_username (){
    cut -d: -f1 < /root/.master.info
}

# Removes a file or a directory in case it exists
function rm_if_exists () {
    path="$1"
    if [[ -e "$path" ]]; then
      rm -rf "$path"
    fi
}

