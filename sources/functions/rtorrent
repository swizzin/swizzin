#!/bin/bash

export distribution=$(lsb_release -is)
export release=$(lsb_release -rs)
export codename=$(lsb_release -cs)

function whiptail_rtorrent() {
    if [[ -z $rtorrentver ]] && [[ -z $1 ]]; then
        repov=$(get_candidate_version rtorrent)

        function=$(whiptail --title "Choose an rTorrent version" --menu "All versions other than repo will be locally compiled from source" --ok-button "Continue" 14 50 5 \
            Repo "(${repov})" \
            0.9.8 "" \
            0.9.7 "" \
            0.9.6 "" 3>&1 1>&2 2>&3) || {
            echo_error "rTorrent version choice aborted"
            exit 1
        }

        case $function in
            0.9.6)
                export rtorrentver='0.9.6'
                export libtorrentver='0.13.6'
                ;;

            0.9.7)
                export rtorrentver='0.9.7'
                export libtorrentver='0.13.7'
                ;;

            0.9.8)
                export rtorrentver='0.9.8'
                export libtorrentver='0.13.8'
                ;;

            Repo)
                export rtorrentver='repo'
                export libtorrentver='repo'
                ;;

            *)
                echo_error "$function is not a valid rTorrent version"
                exit 1
                ;;
        esac
    fi
}

function configure_rtorrent() {
    # Link time optimizations for 4 plus threads
    if [ $(nproc) -ge 4 ]; then
        export rtorrentflto="-flto=$(nproc)"
    else
        export rtorrentflto=""
    fi
    # pipe optimizations for 512MB plus memory
    memory=$(awk '/MemAvailable/ {printf( "%.f\n", $2 / 1024 )}' /proc/meminfo)
    if [[ $memory > 512 ]]; then
        export rtorrentpipe="-pipe"
    else
        export rtorrentpipe=""
    fi
    # GCC optimization level for program compilation
    if [ $(nproc) -le 2 ]; then
        export rtorrentlevel="-O1"
    else
        export rtorrentlevel="-O2"
    fi
}

function depends_rtorrent() {
    if [[ ! $rtorrentver == repo ]]; then
        APT='subversion dos2unix bc screen zip unzip sysstat build-essential comerr-dev
    dstat automake libtool libcppunit-dev libssl-dev pkg-config libcurl4-openssl-dev
    libsigc++-2.0-dev unzip curl libncurses5-dev yasm fontconfig libfontconfig1
    libfontconfig1-dev mediainfo'
        apt_install $APT

        . /etc/swizzin/sources/functions/fpm
        install_fpm
    else
        APT='screen zip unzip bc mediainfo curl'
        apt_install $APT
    fi

    # mktorrent from source
    cd /tmp
    curl -sL https://github.com/Rudde/mktorrent/archive/v1.1.zip -o mktorrent.zip >> $log 2>&1
    . /etc/swizzin/sources/functions/utils
    rm_if_exists "/tmp/mktorrent"
    unzip -d mktorrent -j mktorrent.zip >> $log 2>&1
    cd mktorrent
    make >> $log 2>&1
    make install PREFIX=/usr >> $log 2>&1
    cd /tmp
    rm -rf mktorrent*
}

function build_xmlrpc-c() {
    cd "/tmp"
    . /etc/swizzin/sources/functions/utils
    rm_if_exists "/tmp/xmlrpc-c"
    rm_if_exists "/tmp/dist/xmlrpc-c "
    XMLRPC_REV=2954
    svn co http://svn.code.sf.net/p/xmlrpc-c/code/advanced@$XMLRPC_REV /tmp/xmlrpc-c >> $log 2>&1 || { svn co https://github.com/mirror/xmlrpc-c/trunk/advanced@$XMLRPC_REV /tmp/xmlrpc-c >> $log 2>&1; }
    cd /tmp/xmlrpc-c
    curl -sL "http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD" -o ./config.guess >> $log 2>&1
    curl -sL "http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD" -o ./config.sub >> $log 2>&1
    ./configure --prefix=/usr --disable-cplusplus --disable-wininet-client --disable-libwww-client >> $log 2>&1 || {
        echo_error "Something went wrong while configuring xmlrpc"
        exit 1
    }
    source <(sed 's/ //g' version.mk)
    VERSION=$XMLRPC_MAJOR_RELEASE.$XMLRPC_MINOR_RELEASE.$XMLRPC_POINT_RELEASE
    make -j$(nproc) CFLAGS="-w ${rtorrentflto} ${rtorrentpipe}" >> $log 2>&1
    make DESTDIR=/tmp/dist/xmlrpc-c install >> $log 2>&1 || {
        echo_error "Something went wrong while making xmlrpc"
        exit 1
    }
    mkdir -p /root/dist
    fpm -f -C /tmp/dist/xmlrpc-c -p /root/dist/xmlrpc-c_VERSION.deb -s dir -t deb -n xmlrpc-c --version ${VERSION} --description "xmlrpc-c compiled by swizzin" > /dev/null 2>&1
    dpkg -i /root/dist/xmlrpc-c_${VERSION}.deb >> $log 2>&1
    cd /tmp
    rm -rf xmlrpc-c
    rm -rf /tmp/dist/xmlrpc-c
}

function build_libtorrent_rakshasa() {
    libtorrentloc="https://github.com/rakshasa/libtorrent/archive/refs/tags/v${libtorrentver}.tar.gz"
    cd "/tmp"
    . /etc/swizzin/sources/functions/utils
    rm_if_exists "/tmp/libtorrent"
    mkdir /tmp/libtorrent
    curl -sL ${libtorrentloc} -o /tmp/libtorrent-${libtorrentver}.tar.gz
    VERSION=$libtorrentver
    tar -xf /tmp/libtorrent-${libtorrentver}.tar.gz -C /tmp/libtorrent --strip-components=1 >> $log 2>&1
    cd /tmp/libtorrent >> $log 2>&1

    if [[ -f /root/libtorrent-rakshasa-${libtorrentver}.patch ]]; then
        patch -p1 < /root/libtorrent-rakshasa-${libtorrentver}.patch >> ${log} 2>&1 || {
            echo _error "Something went wrong when patching libtorrent-rakshasa"
            exit 1
        }
        echo_info "Libtorrent-rakshasa patch found and applied!"
    else
        echo_log_only "No libtorrent-rakshasa patch found at /root/libtorrent-rakshasa-${libtorrentver}.patch"
    fi
    if [[ ${libtorrentver} =~ ^("0.13.6"|"0.13.7")$ ]]; then
        patch -p1 < /etc/swizzin/sources/patches/rtorrent/openssl.patch >> "$log" 2>&1
        if pkg-config --atleast-version=1.14 cppunit && [[ ${libtorrentver} == 0.13.6 ]]; then
            patch -p1 < /etc/swizzin/sources/patches/rtorrent/cppunit-libtorrent.patch >> "$log" 2>&1
        fi
        if [[ ${libtorrentver} == "0.13.6" ]]; then
            patch -p1 < /etc/swizzin/sources/patches/rtorrent/bencode-libtorrent.patch >> "$log" 2>&1
        fi
    fi
    ./autogen.sh >> $log 2>&1
    ./configure --prefix=/usr >> $log 2>&1 || {
        echo_error "Something went wrong while configuring libtorrent"
        exit 1
    }
    make -j$(nproc) CXXFLAGS="-w ${rtorrentlevel} ${rtorrentflto} ${rtorrentpipe}" >> $log 2>&1 || {
        echo_error "Something went wrong while making libtorrent"
        exit 1
    }
    rm_if_exists "/tmp/dist/libtorrent-rakshasa"
    make DESTDIR=/tmp/dist/libtorrent-rakshasa install >> $log 2>&1
    mkdir -p /root/dist
    fpm -f -C /tmp/dist/libtorrent-rakshasa -p /root/dist/libtorrent-rakshasa_VERSION.deb -s dir -t deb -n libtorrent-rakshasa --version ${VERSION} --description "libtorrent-rakshasa compiled by swizzin" > /dev/null 2>&1
    dpkg -i /root/dist/libtorrent-rakshasa_${VERSION}.deb >> $log 2>&1
    cd /tmp
    rm -rf /tmp/dist/libtorrent-rakshasa
    rm -rf libtorrent*
}

function build_rtorrent() {
    rtorrentloc="https://github.com/rakshasa/rtorrent/archive/refs/tags/v${rtorrentver}.tar.gz"
    cd "/tmp"
    . /etc/swizzin/sources/functions/utils
    rm_if_exists "/tmp/rtorrent*"
    mkdir /tmp/rtorrent
    curl -sL ${rtorrentloc} -o /tmp/rtorrent-${rtorrentver}.tar.gz
    tar -xzf /tmp/rtorrent-${rtorrentver}.tar.gz -C /tmp/rtorrent --strip-components=1 >> $log 2>&1
    VERSION=$rtorrentver
    cd /tmp/rtorrent
    if [[ -f /root/rtorrent-${rtorrentver}.patch ]]; then
        patch -p1 < /root/rtorrent-${rtorrentver}.patch >> ${log} 2>&1 || {
            echo _error "Something went wrong when patching rTorrent"
            exit 1
        }
        echo_info "rTorrent patch found and applied!"
    else
        echo_log_only "No rTorrent patch found at /root/rtorrent-${rtorrentver}.patch"
    fi
    #apply xmlrpc-fix to all rtorrents
    patch -p1 < /etc/swizzin/sources/patches/rtorrent/xmlrpc-fix.patch >> "$log" 2>&1
    #use pkgconfig for cppunit if 0.9.6
    stdc=
    if [[ ${rtorrentver} == "0.9.6" ]]; then
        patch -p1 < /etc/swizzin/sources/patches/rtorrent/rtorrent-0.9.6.patch >> "$log" 2>&1
        stdc="-std=c++11"
    fi
    ./autogen.sh >> $log 2>&1
    ./configure --prefix=/usr --with-xmlrpc-c >> $log 2>&1 || {
        echo_error "Something went wrong while configuring rtorrent"
        exit 1
    }
    make -j$(nproc) CXXFLAGS="-w ${rtorrentlevel} ${rtorrentflto} ${rtorrentpipe} ${stdc}" >> $log 2>&1 || {
        echo_error "Something went wrong while making rtorrent"
        exit 1
    }
    rm_if_exists "/tmp/dist/rtorrent"
    make DESTDIR=/tmp/dist/rtorrent install >> $log 2>&1
    mkdir -p /root/dist
    fpm -f -C /tmp/dist/rtorrent -p /root/dist/rtorrent_VERSION.deb -s dir -t deb -n rtorrent --version ${VERSION} --description "rtorrent compiled by swizzin" > /dev/null 2>&1
    dpkg -i /root/dist/rtorrent_${VERSION}.deb >> $log 2>&1
    cd "/tmp"
    ldconfig >> $log 2>&1
    rm -rf rtorrent* >> $log 2>&1
    rm -rf /tmp/dist/rtorrent
    apt-mark hold rtorrent >> ${log} 2>&1
}

function rtorrent_apt() {
    apt_install rtorrent
}

function remove_rtorrent() {
    toclean=(rtorrent libtorrent-rakshasa)
    repo=$(dpkg -l | grep -P libtorrent'\d+' | awk '{print $2}' | cut -d: -f1)
    if [[ -n $repo ]]; then
        toclean+=($repo)
    fi
    for c in ${toclean[@]}; do
        # TODO add option to pass extra flags
        apt-get remove -y -q --allow-change-held-packages $c >> $log 2>&1
    done
}

function remove_rtorrent_legacy() {
    rm -rf /usr/bin/rtorrent
    cd /tmp
    git clone https://github.com/rakshasa/libtorrent.git libtorrent >> /dev/null 2>&1
    cd libtorrent
    ./autogen.sh >> $log 2>&1
    ./configure --prefix=/usr >> $log 2>&1
    make uninstall >> $log 2>&1
    cd -
    rm -rf /tmp/libtorrent
}
