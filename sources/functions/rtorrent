#!/bin/bash

export distribution=$(lsb_release -is)
export release=$(lsb_release -rs)
export codename=$(lsb_release -cs)

function whiptail_rtorrent () {
  if [[ -z $rtorrentver ]] && [[ -z $1 ]]; then
    if [[ ! ${codename} =~ ("xenial"|"jessie") ]]; then
      function=$(whiptail --title "Install Software" --menu "Choose an rTorrent version:" --ok-button "Continue" --nocancel 12 50 3 \
                  0.9.8 "" \
                  0.9.7 "" \
                  0.9.6 "" \
                  feature-bind "" \
                  repo "" 3>&1 1>&2 2>&3)

    else
      function=$(whiptail --title "Install Software" --menu "Choose an rTorrent version:" --ok-button "Continue" --nocancel 12 50 3 \
                  0.9.8 "" \
                  0.9.7 "" \
                  0.9.6 "" \
                  0.9.4 "" \
                  0.9.3 "" \
                  feature-bind "" \
                  repo "" 3>&1 1>&2 2>&3)
    fi


    if [[ $function == 0.9.8 ]]; then
      export rtorrentver='0.9.8'
      export libtorrentver='0.13.8'
    elif [[ $function == 0.9.7 ]]; then
      export rtorrentver='0.9.7'
      export libtorrentver='0.13.7'
    elif [[ $function == 0.9.6 ]]; then
      export rtorrentver='0.9.6'
      export libtorrentver='0.13.6'
    elif [[ $function == 0.9.4 ]]; then
      export rtorrentver='0.9.4'
      export libtorrentver='0.13.4'
    elif [[ $function == 0.9.3 ]]; then
      export rtorrentver='0.9.3'
      export libtorrentver='0.13.3'
    elif [[ $function == feature-bind ]]; then
      export rtorrentver='feature-bind'
      export libtorrentver='feature-bind'
    elif [[ $function == repo ]]; then
      export rtorrentver='repo'
      export libtorrentver='repo'
    fi
  fi
} 

function depends_rtorrent () {
  if [[ ! $rtorrentver == repo ]]; then
    APT='subversion dos2unix bc screen zip unzip sysstat build-essential comerr-dev
    dstat automake libtool libcppunit-dev libssl-dev pkg-config libcurl4-openssl-dev
    libsigc++-2.0-dev unzip curl libncurses5-dev yasm fontconfig libfontconfig1
    libfontconfig1-dev mediainfo'
    for depends in $APT; do
      apt-get -q -y install "$depends"  >> $log 2>&1 || { echo "ERROR: APT-GET could not install required package: ${depends}. That's probably not good..."; }
    done

    . /etc/swizzin/sources/functions/fpm
    install_fpm
  else
    APT='screen zip unzip bc mediainfo curl'
    for depends in $APT; do
      apt-get -q -y install "$depends"  >> $log 2>&1 || { echo "ERROR: APT-GET could not install required package: ${depends}. That's probably not good..."; }
    done
  fi

	# (un)rar
  if [[ $distribution == "Debian" ]]; then
	_rar
  else
    apt-get -y install rar unrar >>$log 2>&1 || { echo "INFO: Could not find rar/unrar in the repositories. It is likely you do not have the multiverse repo enabled. Installing directly."; _rar; }
  fi

	# mktorrent from source
	cd /tmp
	wget -q -O mktorrent.zip https://github.com/Rudde/mktorrent/archive/v1.1.zip >>$log 2>&1
	unzip -d mktorrent -j mktorrent.zip >>$log 2>&1
	cd mktorrent
	make >>$log 2>&1
	make install PREFIX=/usr >>$log 2>&1
	cd /tmp
	rm -rf mktorrent*
}

function build_xmlrpc-c () {
  xmlrpc="https://svn.code.sf.net/p/xmlrpc-c/code/advanced"
	cd "/tmp"
	svn co https://svn.code.sf.net/p/xmlrpc-c/code/advanced xmlrpc-c >>$log 2>&1 || { svn co https://github.com/mirror/xmlrpc-c/trunk/advanced xmlrpc-c >>$log 2>&1; }
	cd xmlrpc-c
	./configure --prefix=/usr --disable-cplusplus >>$log 2>&1
  source <(sed 's/ //g' version.mk)
  VERSION=$XMLRPC_MAJOR_RELEASE.$XMLRPC_MINOR_RELEASE.$XMLRPC_POINT_RELEASE
	make -j$(nproc) >>$log 2>&1
	make DESTDIR=/tmp/dist/xmlrpc-c install >>$log 2>&1
  mkdir -p /root/dist
  fpm -f -C /tmp/dist/xmlrpc-c -p /root/dist/xmlrpc-c_VERSION.deb -s dir -t deb -n xmlrpc-c --version ${VERSION} --description "xmlrpc-c compiled by swizzin" > /dev/null 2>&1
  dpkg -i /root/dist/xmlrpc-c_${VERSION}.deb
  cd /tmp
  rm -rf xmlrpc-c
  rm -rf /tmp/dist/xmlrpc-c
}

function build_libtorrent_rakshasa () {
  libtorrentloc="http://rtorrent.net/downloads/libtorrent-${libtorrentver}.tar.gz"
	cd "/tmp"
	if [[ ${libtorrentver} == feature-bind ]]; then
		git clone -b ${libtorrentver} https://github.com/rakshasa/libtorrent.git libtorrent >>$log 2>&1
		cd libtorrent
    VERSION=$(git describe | sed 's/^.//g')
	else
		mkdir libtorrent
		wget -q ${libtorrentloc}
    VERSION=$libtorrentver
		tar -xvf libtorrent-${libtorrentver}.tar.gz -C /tmp/libtorrent --strip-components=1 >>$log 2>&1
		cd libtorrent >>$log 2>&1
		if [[ ${libtorrentver} =~ ("0.13.6"|"0.13.7") ]] && [[ ! ${codename} =~ ("xenial"|"jessie") ]]; then
			patch -p1 < /etc/swizzin/sources/openssl.patch >>"$log" 2>&1
			if pkg-config --atleast-version=1.14 cppunit && [[ ${libtorrentver} == 0.13.6 ]]; then
				patch -p1 < /etc/swizzin/sources/cppunit.patch >>"$log" 2>&1
			fi
		fi
	fi
	./autogen.sh >>$log 2>&1
	./configure --prefix=/usr >>$log 2>&1
	make -j$(nproc) >>$log 2>&1
	make DESTDIR=/tmp/dist/libtorrent-rakshasa install >>$log 2>&1
  mkdir -p /root/dist
  fpm -f -C /tmp/dist/libtorrent-rakshasa -p /root/dist/libtorrent-rakshasa_VERSION.deb -s dir -t deb -n libtorrent-rakshasa --version ${VERSION} --description "libtorrent-rakshasa compiled by swizzin" > /dev/null 2>&1
  dpkg -i /root/dist/libtorrent-rakshasa_${VERSION}.deb
  cd /tmp
  rm -rf /tmp/dist/libtorrent-rakshasa
  rm -rf libtorrent*
}

function build_rtorrent () {
  rtorrentloc="http://rtorrent.net/downloads/rtorrent-${rtorrentver}.tar.gz"
	cd "/tmp"
	if [[ ${rtorrentver} == feature-bind ]]; then
		git clone -b ${rtorrentver} https://github.com/rakshasa/rtorrent.git rtorrent >>$log 2>&1
	else
		mkdir rtorrent
		wget -q ${rtorrentloc}
		tar -xzvf rtorrent-${rtorrentver}.tar.gz -C /tmp/rtorrent --strip-components=1 >>$log 2>&1
    VERSION=$rtorrentver
	fi
	cd rtorrent
	if [[ ${rtorrentver} == feature-bind ]]; then
		./autogen.sh >>$log 2>&1
    VERSION=$(git describe | sed 's/^.//g')
	fi
	./configure --prefix=/usr --with-xmlrpc-c >>$log 2>&1
	make -j$(nproc) >>$log 2>&1
	make DESTDIR=/tmp/dist/rtorrent install >>$log 2>&1
  mkdir -p /root/dist
  fpm -f -C /tmp/dist/rtorrent -p /root/dist/rtorrent_VERSION.deb -s dir -t deb -n rtorrent --version ${VERSION} --description "rtorrent compiled by swizzin" > /dev/null 2>&1
  dpkg -i /root/dist/rtorrent_${VERSION}.deb
	cd "/tmp"
	ldconfig >>$log 2>&1
	rm -rf rtorrent* >>$log 2>&1
  rm -rf /tmp/dist/rtorrent
  apt-mark hold rtorrent
}

function rtorrent_apt () {
  apt-get install -y -q rtorrent >> $log 2>&1
}

function _rar() {
	cd /tmp
  wget -q http://www.rarlab.com/rar/rarlinux-x64-5.5.0.tar.gz
  tar -xzf rarlinux-x64-5.5.0.tar.gz >/dev/null 2>&1
  cp rar/*rar /bin >/dev/null 2>&1
  rm -rf rarlinux*.tar.gz >/dev/null 2>&1
  rm -rf /tmp/rar >/dev/null 2>&1
}

function remove_rtorrent () {
  toclean=(rtorrent libtorrent-rakshasa)
  repo=$(dpkg -l | grep -P libtorrent'\d+' | awk '{print $2}' | cut -d: -f1)
  if [[ -n $repo ]]; then
    toclean+=($repo)
  fi
  for c in ${toclean[@]}; do
    apt-get remove -y -q $c >> $log 2>&1
  done
}

function remove_rtorrent_legacy () {
  rm -rf /usr/bin/rtorrent
  cd /tmp
  git clone https://github.com/rakshasa/libtorrent.git libtorrent >>/dev/null 2>&1
  cd libtorrent
  ./autogen.sh >>$log 2>&1
  ./configure --prefix=/usr >>$log 2>&1
  make uninstall >>$log 2>&1
  cd -
  rm -rf /tmp/libtorrent
}