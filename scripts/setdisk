#!/bin/bash
# Swizzin Quota Set Script
# Modified by flying_sausages from Quickbox files
#
# GitHub:   https://github.com/QuickBox/quickbox_packages
# QuickBox Copyright (C) 2017 QuickBox.io
# Licensed under GNU General Public License v3.0 GPL-3 (in short)

function _setdisk() {
    username="$1"
    SIZE="$2"
    if [[ -z $1 ]]; then
        echo "======================================================================================"
        echo "Disk Space MUST be in MB/GB/TB or max - Do not attempt to add decimals in space settings,"
        echo "Example - Good: 711GB, 2TB,, or max"
        echo "Example - Bad: 711.5GB, 2.5TB, or MAX"
        echo "You can also use setdisk username size to set the values non-interactively"
        echo "Example - 'setdisk myuser 20GB'"
        echo "======================================================================================"
        echo
    fi
    if [[ -z $username ]]; then
        echo -n "Username: "
        read -r username
    else
        if [[ ! $(id -u "$username") ]]; then
            echo "User does not exist. Exiting"
            return 1
        fi
    fi
    if [[ -z "$SIZE" ]]; then
        echo "Quota size for user: (EX: 500GB, 2TB, max): "
        read -r SIZE
    fi

    if [[ $SIZE = 'max' ]]; then
        echo "Using max size. Please notice this is more than what is actually available on the disk."
    elif echo "$SIZE" | grep -q -E '^[0-9]+(M|T|G)B$'; then
        # echo "Using $SIZE"
        :
    else
        SIZE='Invalid'
    fi

    case "$SIZE" in
        max)
            fstabid=$(grep quota /etc/fstab | awk '{printf $1}')
            if [[ $fstabid =~ "UUID" ]]; then
                uuid=$(echo "$fstabid" | cut -d= -f 2)
                disk=$(blkid -U "$uuid")
            elif [[ $fstabid =~ "LABEL" ]]; then
                label=$(echo "$fstabid" | cut -d= -f 2)
                disk=$(blkid -L "$label")
            else
                disk=$fstabid
            fi

            onekblocks=$(df "$disk" --output=source,size | tail -1 | awk '{printf $2}')
            humansize=$(df "$disk" -h --output=source,size | tail -1 | awk '{printf $2}')
            echo "Maximum on $disk is $onekblocks (approx $humansize)"

            # setquota -u "${username}" "$onekblocks" "$onekblocks" 0 0 -a
            ;;
        *TB)
            QUOTASIZE=$(echo "$SIZE" | cut -d'T' -f1)
            DISKSIZE=$((QUOTASIZE * 1024 * 1024 * 1024))
            setquota -u "${username}" "${DISKSIZE}" "${DISKSIZE}" 0 0 -a
            ;;
        *GB)
            QUOTASIZE=$(echo "$SIZE" | cut -d'G' -f1)
            DISKSIZE=$((QUOTASIZE * 1024 * 1024))
            setquota -u "${username}" "${DISKSIZE}" "${DISKSIZE}" 0 0 -a
            ;;
        *MB)
            QUOTASIZE=$(echo "$SIZE" | cut -d'M' -f1)
            DISKSIZE=$((QUOTASIZE * 1024))
            setquota -u "${username}" "${DISKSIZE}" "${DISKSIZE}" 0 0 -a
            ;;
        *)
            echo "================================================================"
            echo "QUOTA ERROR Size MUST be in either 'max' or integer of MB/GB/TB."
            echo "Type 'setdisk $1' and try again"
            echo "================================================================"
            return 1
            ;;
    esac
}

if [[ -f /install/.quota.lock ]]; then
    _setdisk "$1" "$2"
else
    echo "Quota not installed"
    return 1
fi
